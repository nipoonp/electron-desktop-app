name: Tabin CI/CD

on:
    push:
        branches: [feature]

jobs:
    slack_message_start:
        runs-on: ubuntu-latest
        steps:
            - name: Post to a Slack channel
              id: slack
              uses: slackapi/slack-github-action@v1.14.0
              with:
                  channel-id: ${{ secrets.SLACK_BOT_CHANNEL_ID }}
                  slack-message: "Electron build started!"
              env:
                  SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
    create_release:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: get-npm-version
              id: package-version
              uses: martinbeentjes/npm-get-version-action@master
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
              with:
                  tag_name: v${{steps.package-version.outputs.current-version}}
                  release_name: v${{steps.package-version.outputs.current-version}}
                  body: ðŸš€ðŸš€ðŸ”¥ Release auto-generated by Github actions CI/CD. ðŸ”¥ðŸš€ðŸš€
                  draft: true
                  prerelease: false
    windows:
        runs-on: windows-latest
        env:
            CI: false #Need this otherwise github actions will do this => "Treating warnings as errors because process.env.CI = true"
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: 14
            - name: Install windows build tools
              run: npm install --global --production windows-build-tools@4.0.0
            - name: Set npm config set msvs_version 2019 --global
              run: npm config set msvs_version 2019 --global
            - name: Install node-gyp
              run: npm install --global node-gyp@latest
            - name: Install dependencies
              run: npm install
            - name: Build native dependencies
              run: ./node_modules/.bin/electron-rebuild
            - name: Build web
              run: npm run build:web
            - name: Build desktop
              run: npm run build:desktop
            - name: Release Electron app
              uses: samuelmeuli/action-electron-builder@v1
              with:
                  github_token: ${{ secrets.github_token }}
                  release: ${{ startsWith(github.ref, 'refs/tags/v') }}
                  args: "-w"
              env:
                  CSC_LINK: ${{ secrets.WINDOWS_CERTS }}
                  CSC_KEY_PASSWORD: ""
    # macos:
    #     runs-on: macos-latest
    #     env:
    #         CI: false #Need this otherwise github actions will do this => "Treating warnings as errors because process.env.CI = true"
    #     steps:
    #         - uses: actions/checkout@v2
    #         - uses: actions/setup-node@v1
    #           with:
    #               node-version: 14
    #         - name: Install dependencies
    #           run: npm install
    #         - name: Build native dependencies
    #           run: ./node_modules/.bin/electron-rebuild
    #         - name: Build web
    #           run: npm run build:web
    #         - name: Build desktop
    #           run: npm run build:desktop
    #         - name: Release Electron app
    #           uses: samuelmeuli/action-electron-builder@v1
    #           with:
    #               github_token: ${{ secrets.github_token }}
    #               release: ${{ startsWith(github.ref, 'refs/tags/v') }}
    #               args: "-m"
    #           env:
    #               CSC_LINK: ${{ secrets.MAC_CERTIFICATE_AUTO_DOWNLOAD_GITHUB_LINK }}
    #               CSC_KEY_PASSWORD: ""
    slack_message_complete:
        needs: [slack_message_start, create_release, windows]
        runs-on: ubuntu-latest
        steps:
            - name: Post to a Slack channel
              id: slack
              uses: slackapi/slack-github-action@v1.14.0
              with:
                  channel-id: ${{ secrets.SLACK_BOT_CHANNEL_ID }}
                  slack-message: "Electron build completed! ðŸš€ðŸš€ðŸ”¥"
              env:
                  SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
